(defwidget status-widget []
  (centerbox :orientation "h"
    (workspace-widget)
    (music-widget)
    (side-widget)))

(defwidget side-widget []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
       :spacing 10
    (tray-widget)
    (time-widget)
  )
)

; -- Workspace --

(defpoll WORKSPACE_CURRENT :interval "70ms" `~/.config/eww/scripts/hyprland_workspace`)
(defpoll WORKSPACE_WINDOW_ACTIVE :interval "70ms" `~/.config/eww/scripts/hyprland_activewindow_workspace`)

(defvar WORKSPACE_LIST "[1, 2, 3, 4, 5, 6, 7, 8, 9]")

(defwidget workspace-widget []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (for workspace in WORKSPACE_LIST
      (button
        :class {matches(workspace, WORKSPACE_WINDOW_ACTIVE) ? "active" : ""}
        :onclick `hyprctl dispatch workspace ${workspace}`
	{workspace == WORKSPACE_CURRENT ? "⬤" : "◯"}
      )
    )
  )
)

; -- Music --

(defpoll MUSIC_CURRENT :interval "70ms" `~/.config/eww/scripts/playerctl_get_info`)
(defpoll MUSIC_STATUS :interval "70ms" "playerctl status")


(defwidget music-widget []
  (button
    :class {matches(MUSIC_STATUS, "Playing") ? "active" : ""}
    :onclick `playerctl play-pause`
    "♫ ${MUSIC_CURRENT}"
  )
)

; -- Tray --

(defwidget tray-widget []
  (box
    (systray)))

; -- Time --

(defpoll TIME :interval "10s" "date '+%H:%M'")

(defwidget time-widget []
  (box TIME)
)

(defwindow bar
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "90%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (status-widget))
